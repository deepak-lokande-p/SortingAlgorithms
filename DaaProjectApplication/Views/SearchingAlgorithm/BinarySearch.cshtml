@{
    ViewBag.Title = "BinarySearch";
}

<style>
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>
<div class="row page-titles mx-0">
    <div class="col p-md-0">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">Searching Algorithms</li>
            <li class="breadcrumb-item active">Binary Search</li>
        </ol>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <p style="font-weight:bold">Binary Search: </p>
                    <hr />
                    <p>Input the Elements in Sorted Order:</p>
                    <div class="form-group">
                        <textarea class="form-control" style="resize: none;" name="textarea" id="textarea" cols="30" rows="2"
                                  oninput="this.value = this.value.replace(/[^0-9,]/g, '').replace(/(\..*)\./g, '$1');" @*(/[^0-9]/g, '')*@
                                  placeholder="Enter Comma Separated Numbers"></textarea>
                    </div>
                    <div class="d-flex align-items-center">
                        <button class="btn btn-primary px-3 ml-0" id="noSubmit">Submit</button>
                        <button class="btn btn-primary px-3 ml-3" id="clearVal">Clear</button>
                    </div>
                    <div style="margin-top:15px">
                        <p style="font-weight:bold">Entered Numbers:</p>
                        <p id="inputNos"></p>
                    </div>
                    <hr />
                    <p>Enter the Element to search using Binary Search</p>

                    <div class="form-group">
                        <div class="row">
                            <div class="col">
                                <input type="number" class="form-control" id="searchElement">
                            </div>
                            <div class="col">

                            </div>
                        </div>
                    </div>
                    <div class="d-flex align-items-center">
                        <button class="btn btn-primary px-3 ml-0" id="binarySearchVal">Search</button>
                    </div>

                    <hr />
                    <p>Result:</p>
                    <p>The Execution time is: <span id="performance"></span></p>
                    <span id="errMssg"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script type="text/javascript">
    $(document).on("wheel", "input[type=number]", function (e) {
        $(this).blur();
    });

    $('#noSubmit').on('click', function () {
        //alert();
        debugger;
        $('#inputNos').empty();
        var textareaVal = $('#textarea').val();
        if (textareaVal == "") {
            alert("Input a Number")
        }
        else {
            var listData = textareaVal.split(',').sort((a, b) => a - b);
            var len = listData.length;
 
            $('#inputNos').append('Sorted Elements: ' + listData)
        }
    })
    $('#clearVal').on('click', function () {
        debugger;
        $('#textarea').val("");
        $('#inputNos').empty();
        $('#searchElement').val("");
        $('#errMssg').empty();
        $('#performance').empty();
    })

    /*Binary Search Algorithm Based on Click Function*/
    $('#binarySearchVal').on('click', function () {
        debugger;
        $('#errMssg').empty()
        $('#performance').empty();
        var elementToBeSearched = $('#searchElement').val();
        var textareaVal = $('#textarea').val();
        var listData = textareaVal.split(',').sort();

        /*Binary Search Algorithm*/
        /*The algorithm starts at the middle of the array elements.*/
        var t0 = performance.now()
        var result = "";
        var n = listData.length;
        var min = 0;
        var max = n - 1;
        var mid = 0;
        while (min <= max)
        {
            //set midPoint = lowerBound + ( upperBound - lowerBound ) / 2
            mid = parseInt((max + min) / 2);

            // Check if elementToBeSearched is present at mid
            if (listData[mid] == elementToBeSearched)
            {
                result = listData[mid];
                break;
            }
                
            if (listData[mid] > elementToBeSearched) {
                max = mid - 1;
            }

            // If elementToBeSearched is smaller, ignore right half
            if (listData[mid] < elementToBeSearched) 
            {
                min = mid + 1;
            }
        }
        var t1 = performance.now()
        // if we reach here, then element was
        // not present
        if (result == "")
        {
            $('#errMssg').text("**Element is not present in array").css("color", "#ff3333")
        }
        else
            $('#errMssg').append("<br />" + 'Element found is: ', result)
            $('#performance').append(t1 - t0);
    })
</script>